"""Added contrains to Users and Articles models

Revision ID: eff1fade4726
Revises: 275e8c8b2d9e
Create Date: 2025-06-23 20:48:20.610502

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "eff1fade4726"
down_revision: Union[str, None] = "275e8c8b2d9e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(
        "uq_username_users", "users", ["username"], schema="dev"
    )
    op.create_unique_constraint("uq_email_users", "users", ["email"], schema="dev")

    op.alter_column(
        "users",
        "username",
        existing_type=sa.String(),
        type_=sa.String(length=16),
        existing_nullable=False,
        schema="dev",
    )

    op.alter_column(
        "users",
        "email",
        existing_type=sa.String(),
        type_=sa.String(length=32),
        existing_nullable=False,
        schema="dev",
    )

    op.create_check_constraint(
        constraint_name="check_email_users",
        table_name="users",
        condition="email ~ '^[A-Za-z0-9]+@[A-Za-z0-9]+\\.[A-Za-z0-9]+$'",
        schema="dev",
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("uq_username_users", "users", schema="dev", type_="unique")
    op.drop_constraint("uq_email_users", "users", schema="dev", type_="unique")

    op.alter_column(
        "users",
        "username",
        existing_type=sa.String(length=16),
        type_=sa.String(),
        existing_nullable=False,
        schema="dev",
    )

    op.alter_column(
        "users",
        "email",
        existing_type=sa.String(length=32),
        type_=sa.String(),
        existing_nullable=False,
        schema="dev",
    )

    op.drop_constraint(
        constraint_name="check_email_users",
        table_name="users",
        schema="dev",
        type_="check",
    )

    # ### end Alembic commands ###
